"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/utils/FetchUtils.ts":
/*!*********************************!*\
  !*** ./src/utils/FetchUtils.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FetchUtils)\n/* harmony export */ });\n/* harmony import */ var _FectchErrorUtils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FectchErrorUtils */ \"(app-pages-browser)/./src/utils/FectchErrorUtils.ts\");\n/* harmony import */ var _AbortUtils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AbortUtils */ \"(app-pages-browser)/./src/utils/AbortUtils.ts\");\n/* harmony import */ var _ErrorUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ErrorUtils */ \"(app-pages-browser)/./src/utils/ErrorUtils.ts\");\n\n\n\nclass FetchUtils {\n    static execute(url, options) {\n        const controller = new AbortController();\n        const responsePromise = fetch(url, {\n            ...options,\n            signal: controller.signal\n        });\n        return {\n            abort: ()=>controller.abort(),\n            response: new Promise((resolve, reject)=>{\n                return responsePromise.then((response)=>{\n                    if (response.ok) {\n                        resolve(response);\n                    } else {\n                        return _ErrorUtils__WEBPACK_IMPORTED_MODULE_2__[\"default\"].throwJsonApiError(response).catch(reject);\n                    }\n                }).catch(reject);\n            })\n        };\n    }\n    static get(url, options) {\n        return this.execute(url, {\n            ...options,\n            method: \"GET\",\n            credentials: \"same-origin\"\n        });\n    }\n    static async executeUnwrapped(url, options) {\n        const { response } = this.execute(url, options);\n        return response;\n    }\n    static post(url, body, options) {\n        return this.execute(url, {\n            ...options,\n            method: \"POST\",\n            credentials: \"same-origin\",\n            headers: {\n                ...options === null || options === void 0 ? void 0 : options.headers,\n                \"Content-Type\": \"application/json\"\n            },\n            body: body instanceof FormData ? body : JSON.stringify(body)\n        });\n    }\n    static put(url, body, options) {\n        return this.execute(url, {\n            ...options,\n            method: \"PUT\",\n            credentials: \"same-origin\",\n            headers: {\n                ...options === null || options === void 0 ? void 0 : options.headers,\n                \"Content-Type\": \"application/json\"\n            },\n            body: body instanceof FormData ? body : JSON.stringify(body)\n        });\n    }\n    static patch(url, body, options) {\n        return this.execute(url, {\n            ...options,\n            method: \"PATCH\",\n            credentials: \"same-origin\",\n            headers: {\n                ...options === null || options === void 0 ? void 0 : options.headers,\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n        });\n    }\n    static delete(url, options) {\n        return this.execute(url, {\n            ...options,\n            method: \"DELETE\",\n            credentials: \"same-origin\"\n        });\n    }\n    static getJson(url, options) {\n        const abortableRequest = this.get(url, {\n            ...options,\n            headers: {\n                ...options === null || options === void 0 ? void 0 : options.headers,\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        return {\n            abort: abortableRequest.abort,\n            response: abortableRequest.response.then((response)=>response.json())\n        };\n    }\n    static postJson(url, body, options) {\n        const abortableRequest = this.post(url, body, options);\n        return {\n            abort: abortableRequest.abort,\n            response: abortableRequest.response.then((response)=>response.json())\n        };\n    }\n    static putJson(url, body, options) {\n        const abortableRequest = this.put(url, body, options);\n        return {\n            abort: abortableRequest.abort,\n            response: abortableRequest.response.then((response)=>response.json())\n        };\n    }\n    static patchJson(url, body, options) {\n        const abortableRequest = this.patch(url, body, options);\n        return {\n            abort: abortableRequest.abort,\n            response: abortableRequest.response.then((response)=>response.json())\n        };\n    }\n    static deleteJson(url, options) {\n        const abortableRequest = this.delete(url, options);\n        return {\n            abort: abortableRequest.abort,\n            response: abortableRequest.response.then((response)=>response.json())\n        };\n    }\n    static abortableRequest(request, registerAbort, dataAccessor) {\n        let rejectPromise;\n        const abort = function() {\n            let type = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : _AbortUtils__WEBPACK_IMPORTED_MODULE_1__.AbortType.EXPLICIT;\n            // This will implicitly cancel the query if it's still running\n            request.abort();\n            rejectPromise(type);\n        };\n        const unregisterAbort = registerAbort === null || registerAbort === void 0 ? void 0 : registerAbort(abort);\n        const dataPromise = new Promise((resolve, reject)=>{\n            request.response.then((response)=>{\n                unregisterAbort === null || unregisterAbort === void 0 ? void 0 : unregisterAbort();\n                resolve(dataAccessor ? dataAccessor(response) : response);\n            }).catch(reject);\n            rejectPromise = (type)=>reject(new _FectchErrorUtils__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"Aborted\", type, 0));\n        });\n        return {\n            response: dataPromise,\n            abort\n        };\n    }\n}\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/FetchUtils.ts\n"));

/***/ })

});